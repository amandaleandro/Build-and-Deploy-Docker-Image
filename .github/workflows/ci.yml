name: Build and Deploy Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Passo 1: Checkout do repositÃ³rio
      - name: Checkout repository
        uses: actions/checkout@v2

      # Passo 2: Configurar Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Passo 3: Login no Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Passo 4: Construir a imagem Docker
      - name: Build Docker image
        run: docker build -t myapp:latest -f ./my-app/Dockerfile ./my-app

      # Passo 5: Salvar a imagem Docker em um arquivo tar
      - name: Save Docker image to tar file
        run: docker save myapp:latest -o image.tar

      # Passo 6: Copiar a imagem Docker para o Droplet
      - name: Copy Docker image to Droplet
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USERNAME }}
          key: ${{ secrets.DROPLET_SSH_KEY }}
          target: /home/${{ secrets.DROPLET_USERNAME }}/image.tar
          source: image.tar

      # Passo 7: Carregar a imagem Docker no Droplet e executar o container
      - name: Load and run Docker image on Droplet
        env:
          DROPLET_SSH_KEY: ${{ secrets.DROPLET_SSH_KEY }}
        run: |
          echo "${DROPLET_SSH_KEY}" > /tmp/key
          chmod 600 /tmp/key
          ssh -o StrictHostKeyChecking=no -i /tmp/key "${{ secrets.DROPLET_USERNAME }}"@"${{ secrets.DROPLET_HOST }}" << 'EOF'
          docker load -i /home/${{ secrets.DROPLET_USERNAME }}/image.tar
          docker stop myapp || true
          docker rm myapp || true
          docker run -d --name myapp -p 80:3000 myapp:latest
          EOF
